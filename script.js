document.getElementById("changeColorBtn").addEventListener("click", function() {
    document.body.style.backgroundColor = getRandomColor();
});

function getRandomColor() {
    const letters = "0123456789ABCDEF";
    let color = "#";
    for (let i = 0; i < 6; i++) {
        color += letters[Math.floor(Math.random() * 16)];
    }
    return color;
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏≤‡∏¢‡∏∏
function checkAge() {
    let ageInput = document.getElementById("ageInput").value.trim(); // ‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏≠‡∏≠‡∏Å
    let age = parseInt(ageInput, 10);
    let result = "";

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    if (isNaN(age) || age < 0) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≤‡∏¢‡∏∏‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 0)");
        return;
    }

    // ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏≤‡∏¢‡∏∏‡∏ï‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏à‡∏£‡∏¥‡∏á
    if (age >= 0 && age <= 2) {
        result = "‡∏ó‡∏≤‡∏£‡∏Å";
    } else if (age <= 12) {
        result = "‡πÄ‡∏î‡πá‡∏Å";
    } else if (age <= 19) {
        result = "‡∏ß‡∏±‡∏¢‡∏£‡∏∏‡πà‡∏ô";
    } else if (age <= 35) {
        result = "‡∏ß‡∏±‡∏¢‡∏´‡∏ô‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏ß";
    } else if (age <= 50) {
        result = "‡∏ß‡∏±‡∏¢‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏ô";
    } else if (age <= 65) {
        result = "‡∏ß‡∏±‡∏¢‡∏ó‡∏≠‡∏á";
    } else {
        result = "‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏";
    }

    document.getElementById("ageResult").textContent = `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô: ${result}`;
}


// ‡πÇ‡∏´‡∏•‡∏î To-Do List ‡∏à‡∏≤‡∏Å LocalStorage
document.addEventListener("DOMContentLoaded", loadTasks);

const taskInput = document.getElementById("taskInput");
const addTaskBtn = document.getElementById("addTaskBtn");
const taskList = document.getElementById("taskList");

if (!localStorage.getItem("tasks")) {
    localStorage.setItem("tasks", JSON.stringify([]));
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô
addTaskBtn.addEventListener("click", addTask);
taskInput.addEventListener("keypress", function(event) {
    if (event.key === "Enter") {
        event.preventDefault();
        addTask();
    }
});

function addTask() {
    const taskText = taskInput.value.trim();
    if (taskText === "") return;

    const taskItem = document.createElement("li");
    taskItem.innerHTML = `${taskText} <button class="delete-btn">‡∏•‡∏ö</button>`;

    taskList.appendChild(taskItem);
    saveTask(taskText);
    taskInput.value = "";

    taskItem.querySelector(".delete-btn").addEventListener("click", function() {
        taskItem.remove();
        removeTask(taskText);
    });
}

function saveTask(task) {
    let tasks = JSON.parse(localStorage.getItem("tasks")) || [];
    tasks.push(task);
    localStorage.setItem("tasks", JSON.stringify(tasks));
}

function loadTasks() {
    let tasks = JSON.parse(localStorage.getItem("tasks")) || [];
    tasks.forEach(task => {
        const taskItem = document.createElement("li");
        taskItem.innerHTML = `${task} <button class="delete-btn">‡∏•‡∏ö</button>`;
        taskList.appendChild(taskItem);

        taskItem.querySelector(".delete-btn").addEventListener("click", function() {
            taskItem.remove();
            removeTask(task);
        });
    });
}

function removeTask(task) {
    let tasks = JSON.parse(localStorage.getItem("tasks")) || [];
    tasks = tasks.filter(t => t !== task);
    localStorage.setItem("tasks", JSON.stringify(tasks));
}
if (tasks.includes(taskText)) {
    alert("‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß!");
    return;
}


// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏°
function calculateCircleArea() {
    let radius = parseFloat(prompt("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤ radius ‡∏Ç‡∏≠‡∏á‡∏ß‡∏á‡∏Å‡∏•‡∏°:"));
    if (isNaN(radius) || radius <= 0) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤ radius ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
        return;
    }
    let area = Math.PI * Math.pow(radius, 2);
    alert("‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏ß‡∏á‡∏Å‡∏•‡∏°‡∏Ñ‡∏∑‡∏≠: " + area);
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏π‡πà/‡∏Ñ‡∏µ‡πà
function checkEvenOdd() {
    let number;
    
    while (true) {
        let input = prompt("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç:");

        // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î Cancel ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (input === null) {
            alert("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô");
            return;
        }

        // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
        number = parseInt(input);

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (!isNaN(number)) {
            break;
        }

        // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà
        let retry = confirm("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?");
        if (!retry) {
            return;
        }
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏π‡πà/‡∏Ñ‡∏µ‡πà
    let result = (number % 2 === 0) ? "‡πÄ‡∏•‡∏Ç‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏π‡πà" : "‡πÄ‡∏•‡∏Ç‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏µ‡πà";
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    alert(result);
}


// ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç‡∏´‡∏ß‡∏¢
let lotteryNumber = "";
let userGuess = "";

document.getElementById("generateLotteryBtn").addEventListener("click", function() {
    lotteryNumber = generateLotteryNumber();
    document.getElementById("lotteryNumber").textContent = "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å: " + lotteryNumber;
});

document.getElementById("checkGuessBtn").addEventListener("click", function() {
    userGuess = document.getElementById("userGuess").value;
    if (userGuess === lotteryNumber) {
        document.getElementById("result").textContent = "‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å!";
    } else {
        document.getElementById("result").textContent = "‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≤‡∏¢‡∏ú‡∏¥‡∏î! ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡∏Ñ‡∏∑‡∏≠: " + lotteryNumber;
    }
});

function generateLotteryNumber() {
    let number = "";
    for (let i = 0; i < 6; i++) {
        number += Math.floor(Math.random() * 10);
    }
    return number;
}

// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì GPA
function calculateGPA() {
    let subjects = [
        { code: "CSI203", credits: 3 },
        { code: "CSI204", credits: 3 },
        { code: "CSI206", credits: 3 },
        { code: "CSI401", credits: 3 },
        { code: "CSI402", credits: 3 }
    ];

    let totalCredits = 0;
    let totalGradePoints = 0;
    let gradeDetails = [];

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡∏£‡∏î‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤ GPA
    function getGradePoint(score) {
        if (score >= 80) return { grade: "A", gpa: 4.0 };
        if (score >= 75) return { grade: "B+", gpa: 3.5 };
        if (score >= 70) return { grade: "B", gpa: 3.0 };
        if (score >= 65) return { grade: "C+", gpa: 2.5 };
        if (score >= 60) return { grade: "C", gpa: 2.0 };
        if (score >= 55) return { grade: "D+", gpa: 1.5 };
        if (score >= 50) return { grade: "D", gpa: 1.0 };
        return { grade: "F", gpa: 0.0 };
    }

    subjects.forEach(function(subject) {
        let score = parseFloat(prompt(`‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤ ${subject.code} (0-100):`));
        while (score < 0 || score > 100 || isNaN(score)) {
            score = parseFloat(prompt(`‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤ ${subject.code} (0-100):`));
        }

        let { grade, gpa } = getGradePoint(score);
        totalCredits += subject.credits;
        totalGradePoints += gpa * subject.credits;
        gradeDetails.push(`${subject.code}: ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ${score} ‚Üí ‡πÄ‡∏Å‡∏£‡∏î ${grade} (GPA: ${gpa})`);
    });

    let GPA = totalGradePoints / totalCredits;
    
    alert(`üîπ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏Å‡∏£‡∏î üîπ\n\n${gradeDetails.join("\n")}\n\nüìå ‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏£‡∏ß‡∏° (GPA): ${GPA.toFixed(2)}`);
}


// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
async function fetchUsers() {
    try {
        const response = await fetch("users.json"); // ‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå JSON ‡πÅ‡∏ó‡∏ô API ‡∏à‡∏£‡∏¥‡∏á
        const users = await response.json();

        const userList = document.getElementById("userList");
        userList.innerHTML = ""; // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô

        users.forEach(user => {
            const userDiv = document.createElement("div");
            userDiv.classList.add("user-card");

            userDiv.innerHTML = `
                <h3>${user.name}</h3>
                <p><strong>Email:</strong> ${user.email}</p>
                <p><strong>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</strong> ${user.address.street}, ${user.address.city}</p>
                <hr>
            `;

            userList.appendChild(userDiv);
        });
    } catch (error) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", error);
    }
}